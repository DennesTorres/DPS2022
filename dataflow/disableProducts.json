{
	"name": "disableProducts",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "sqlSource",
						"type": "LinkedServiceReference"
					},
					"name": "Products"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dimProductDS",
						"type": "DatasetReference"
					},
					"name": "UpdatingRecords"
				}
			],
			"transformations": [
				{
					"name": "DefineEndDate"
				},
				{
					"name": "DefineUpdate"
				}
			],
			"scriptLines": [
				"parameters{",
				"     SQL as string",
				"}",
				"source(output(",
				"          ProductId as integer,",
				"          ProductName as string,",
				"          ListPrice as decimal(19,4),",
				"          ProductModelID as integer,",
				"          ModelName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'query',",
				"     store: 'sqlserver',",
				"     query: ($SQL),",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> Products",
				"Products derive(EndDate = currentTimestamp()) ~> DefineEndDate",
				"DefineEndDate alterRow(updateIf(not(isNull(EndDate)))) ~> DefineUpdate",
				"DefineUpdate sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          ProductKey as integer,",
				"          ProductID as integer,",
				"          Name as string,",
				"          ListPrice as decimal(19,4),",
				"          ProductModelID as integer,",
				"          ModelName as string,",
				"          EndDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['ProductID'],",
				"     skipKeyWrites:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductID = ProductId,",
				"          EndDate",
				"     )) ~> UpdatingRecords"
			]
		}
	}
}