{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dfDPS2022"
		},
		"sqlSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlSource'"
		},
		"default_properties_servername_value": {
			"type": "string",
			"defaultValue": "dps2022sql.database.windows.net"
		},
		"default_properties_databasename_value": {
			"type": "string",
			"defaultValue": "advwrksLTprod"
		},
		"default_properties_username_value": {
			"type": "string",
			"defaultValue": "Dennes"
		},
		"default_properties_passwordkey_value": {
			"type": "string",
			"defaultValue": "prodpassword"
		},
		"default_properties_storagelink_value": {
			"type": "string",
			"defaultValue": "https://dps2022staging.dfs.core.windows.net/"
		},
		"dpsSecrets_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://dps2022secrets.vault.azure.net/"
		},
		"privSQLSource_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/4d72480d-0adb-4df7-b5e3-866c027fe3e0/resourceGroups/DPS2022/providers/Microsoft.Sql/servers/dps2022sql"
		},
		"privSQLSource_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"privStorage_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/4d72480d-0adb-4df7-b5e3-866c027fe3e0/resourceGroups/DPS2022/providers/Microsoft.Storage/storageAccounts/dps2022stagingdev"
		},
		"privStorage_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"linkedStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().storagelink}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {
				"servername": {
					"type": "string",
					"value": "[parameters('default_properties_servername_value')]"
				},
				"databasename": {
					"type": "string",
					"value": "[parameters('default_properties_databasename_value')]"
				},
				"username": {
					"type": "string",
					"value": "[parameters('default_properties_username_value')]"
				},
				"passwordkey": {
					"type": "string",
					"value": "[parameters('default_properties_passwordkey_value')]"
				},
				"storagelink": {
					"type": "string",
					"value": "[parameters('default_properties_storagelink_value')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dpsSecrets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('dpsSecrets_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": true
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/privSQLSource')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('privSQLSource_properties_privateLinkResourceId')]",
				"groupId": "[parameters('privSQLSource_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/privStorage')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('privStorage_properties_privateLinkResourceId')]",
				"groupId": "[parameters('privStorage_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"storagelink": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"servername": {
						"type": "string"
					},
					"databasename": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"secretname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sqlSource_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "dpsSecrets",
							"type": "LinkedServiceReference"
						},
						"secretName": {
							"value": "@linkedService().secretname",
							"type": "Expression"
						}
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/dpsSecrets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsProductCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlSource",
					"type": "LinkedServiceReference",
					"parameters": {
						"servername": {
							"value": "@dataset().servername",
							"type": "Expression"
						},
						"databasename": {
							"value": "@dataset().databasename",
							"type": "Expression"
						},
						"username": {
							"value": "@dataset().username",
							"type": "Expression"
						},
						"secretname": {
							"value": "@dataset().secretname",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"servername": {
						"type": "string"
					},
					"databasename": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"secretname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "ProductCategory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqlSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/productCategoryParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedStorage",
					"type": "LinkedServiceReference",
					"parameters": {
						"storagelink": {
							"value": "@dataset().storagelink",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"storagelink": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "productcategory",
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Import Product Category')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Product Category",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "ParentProductCategoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ParentProductCategoryID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsProductCategory",
								"type": "DatasetReference",
								"parameters": {
									"servername": {
										"value": "@pipeline().globalParameters.servername",
										"type": "Expression"
									},
									"databasename": {
										"value": "@pipeline().globalParameters.databasename",
										"type": "Expression"
									},
									"username": {
										"value": "@pipeline().globalParameters.username",
										"type": "Expression"
									},
									"secretname": {
										"value": "@pipeline().globalParameters.passwordkey",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "productCategoryParquet",
								"type": "DatasetReference",
								"parameters": {
									"storagelink": {
										"value": "@pipeline().globalParameters.storagelink",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsProductCategory')]",
				"[concat(variables('factoryId'), '/datasets/productCategoryParquet')]"
			]
		}
	]
}